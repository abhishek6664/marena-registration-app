/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sample;
import static java.awt.Color.orange;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
/**
 *
 * @author Mahe
 */
public class Receipt extends javax.swing.JFrame {

    /**
     * Creates new form Receipt
     */
    Sample samp=new Sample();
    final String JDBC_DRIVER = "oracle.jdbc.OracleDriver";
   final String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
    //  Database credentials
   final String USER = "system";
   final String PASS = "student";
    Connection conn = null;
    Statement stmt = null;
    int rows;
    String sql="";
    String sql1="";
    String us="";
    String m="";
    DefaultTableModel model;
    ResultSet rs;
    public Receipt(String u) {
        initComponents();
        getContentPane().setBackground(orange);
        us=u;
        sql1="select type_of_login from package where username_pa='"+u+"'";
        
         model=new DefaultTableModel(new String[]{"Name","Amount","Package"},0);
        try{
               //STEP 2: Register JDBC driver
               Class.forName("oracle.jdbc.OracleDriver");

               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");

               //STEP 4: Execute a query
               
               try {
                   
                   stmt = conn.createStatement();
                   System.out.println("Entering try");
                String cm="commit";
                
               rs=stmt.executeQuery(sql1);
               while (rs.next()){
                   m=rs.getString("type_of_login");
               }
               if (m.equals("STUDENT")){
                   sql="select Name_p,Amount,Package_Pay from payment where username_p in(select username_s from student where username_s='"+u+"')";
                   rs=stmt.executeQuery(sql);
                   
               }
               if (m.equals("TEACHING STAFF")){
                   sql="select Name_p,Amount,Package_Pay from payment where username_p in(select username_ts from teaching_staff where username_ts='"+u+"')";
                   rs=stmt.executeQuery(sql);
               }
               if (m.equals("NON-TEACHING STAFF")){
                   sql="select Name_p,Amount,Package_Pay from payment where username_p in(select username_nts from non_teaching_staff where username_nts='"+u+"')";
                   rs=stmt.executeQuery(sql);
               }
               while (rs.next()){
                   String n=rs.getString("Name_p");
                   String a=rs.getString("Amount");
                   String p=rs.getString("Package_Pay");
                   model.addRow(new Object[]{n,a,p});
               }
               this.jTable1.setModel(model);
               stmt.executeUpdate(cm);
               }catch(SQLException se) {
                   System.out.println(se);
               }
               

            }catch(SQLException | ClassNotFoundException se){
                //Handle errors for JDBC
                        System.out.println(se);
            }
            //Handle errors for Class.forName
            finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
               }//end finally try
            }//end try
          this.jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Receipt("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
